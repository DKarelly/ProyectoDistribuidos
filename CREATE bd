-- ============================================
-- BASE DE DATOS: Huella Feliz (PostgreSQL)
-- Estructura limpia sin acciones en cascada
-- ============================================

-- ======================
-- TABLA: ROL_USUARIO
-- ======================
CREATE TABLE rol_usuario (
    idRol SERIAL PRIMARY KEY,
    rolUsuario VARCHAR(30) NOT NULL
);

INSERT INTO rol_usuario (rolUsuario) VALUES 
('Administrador'),
('Adoptante'),
('Donante'),
('Voluntario');

-- ======================
-- TABLA: USUARIO_ROLES
-- ======================
CREATE TABLE usuario_roles (
    idUsuarioRol SERIAL PRIMARY KEY,
    idUsuario INT REFERENCES usuario(idUsuario),
    idRol INT REFERENCES rol_usuario(idRol),
    fecha_asignacion DATE DEFAULT CURRENT_DATE,
    activo BOOLEAN DEFAULT true
);

-- ======================
-- TABLA: USUARIO
-- ======================
CREATE TABLE usuario (
    idUsuario SERIAL PRIMARY KEY,
    aliasUsuario VARCHAR(30),
    correoUsuario VARCHAR(50),
    claveUsuario VARCHAR(100) NOT NULL,
    numeroUsuario VARCHAR(9),
    direccionUsuario VARCHAR(50)
);

-- INSERT
-- Cuando agregues un usuario, también asignarle rol por defecto
INSERT INTO usuario (aliasUsuario, correoUsuario, claveUsuario, numeroUsuario, direccionUsuario) 
VALUES ('testuser', 'test@test.com', 'password123', '12345678', 'Dirección test');

-- Asignar rol "Adoptante" por defecto
INSERT INTO usuario_roles (idUsuario, idRol) 
VALUES (1, 2); -- 2 = Adoptante

-- ======================
-- TABLA: PERSONA
-- ======================
CREATE TABLE persona (
    idPersona SERIAL PRIMARY KEY,
    nombres VARCHAR(30) NOT NULL,
    apePaterno VARCHAR(30) NOT NULL,
    apeMaterno VARCHAR(30) NOT NULL,
    dni CHAR(8) UNIQUE NOT NULL,
    sexo CHAR(1),
    idUsuario INT REFERENCES usuario(idUsuario)
);

-- ======================
-- TABLA: EMPRESA
-- ======================
CREATE TABLE empresa (
    idEmpresa SERIAL PRIMARY KEY,
    nombreEmpresa VARCHAR(50) NOT NULL,
    tipoPersona VARCHAR(30),
    ruc CHAR(20) UNIQUE NOT NULL,
    f_creacion DATE,
    idUsuario INT REFERENCES usuario(idUsuario)
);

-- ======================
-- TABLA: ESPECIE
-- ======================
CREATE TABLE especie (
    idEspecie SERIAL PRIMARY KEY,
    especieAnimal VARCHAR(30) NOT NULL
);

-- INSERT
INSERT INTO especie (especieAnimal) VALUES 
('Perro'),
('Gato'),
('Conejo'),
('Hamster'),
('Ave'),
('Reptil'),
('Otro');

-- ======================
-- TABLA: RAZA
-- ======================
CREATE TABLE raza (
    idRaza SERIAL PRIMARY KEY,
    razaAnimal VARCHAR(30) NOT NULL,
    idEspecie INT REFERENCES especie(idEspecie)
);

-- INSERT
INSERT INTO raza (razaAnimal, idEspecie) VALUES 
-- PERROS (idEspecie = 1)
('Labrador', 1),
('Golden Retriever', 1),
('Pastor Alemán', 1),
('Bulldog', 1),
('Poodle', 1),
('Beagle', 1),
('Rottweiler', 1),
('Chihuahua', 1),
('Mestizo', 1),
('Criollo', 1),

-- GATOS (idEspecie = 2)
('Persa', 2),
('Siamés', 2),
('Maine Coon', 2),
('British Shorthair', 2),
('Ragdoll', 2),
('Bengalí', 2),
('Sphynx', 2),
('Mestizo', 2),
('Criollo', 2),

-- CONEJOS (idEspecie = 3)
('Holandés', 3),
('Angora', 3),
('Mini Rex', 3),
('Criollo', 3),

-- HAMSTERS (idEspecie = 4)
('Dorado', 4),
('Ruso', 4),
('Roborovski', 4),

-- AVES (idEspecie = 5)
('Canario', 5),
('Periquito', 5),
('Cockatiel', 5),
('Criollo', 5),

-- REPTILES (idEspecie = 6)
('Iguana', 6),
('Gecko', 6),
('Tortuga', 6),

-- OTROS (idEspecie = 7)
('Conejo', 7),
('Cobaya', 7),
('Hurón', 7),
('Otro', 7);

-- Ver razas con sus especies
SELECT r.idRaza, r.razaAnimal, e.especieAnimal 
FROM raza r 
JOIN especie e ON r.idEspecie = e.idEspecie 
ORDER BY e.especieAnimal, r.razaAnimal;

-- ======================
-- TABLA: ANIMAL
-- ======================
CREATE TABLE animal (
    idAnimal SERIAL PRIMARY KEY,
    nombreAnimal VARCHAR(50) NOT NULL,
    edadMesesAnimal INT,
    generoAnimal CHAR(1),
    pesoAnimal DECIMAL(5,2),
    pelaje VARCHAR(30),
    tamaño VARCHAR(20),
    idRaza INT REFERENCES raza(idRaza)
);

-- ======================
-- TABLA: GALERIA
-- ======================
CREATE TABLE galeria (
    idGaleria SERIAL PRIMARY KEY,
    imagen VARCHAR(200),
    video VARCHAR(255),
    idAnimal INT REFERENCES animal(idAnimal)
);

-- ======================
-- TABLA: HISTORIAL_ANIMAL
-- ======================
CREATE TABLE historial_animal (
    idHistorial SERIAL PRIMARY KEY,
    pesoHistorial INT,
    f_historial DATE,
    h_historial TIME,
    descripcionHistorial VARCHAR(255),
    nombVeterinario VARCHAR(150),
    idAnimal INT REFERENCES animal(idAnimal)
);

-- ======================
-- TABLA: TIPO_ENFERMEDAD
-- ======================
CREATE TABLE tipo_enfermedad (
    idTipoEnfermedad SERIAL PRIMARY KEY,
    tipoEnfermedad VARCHAR(50) NOT NULL
);

-- INSERT
INSERT INTO tipo_enfermedad (tipoEnfermedad) VALUES 
('Viral'),
('Bacteriana'),
('Parasitaria'),
('Fúngica'),
('Digestiva'),
('Respiratoria'),
('Cardiovascular'),
('Neurológica'),
('Osteoarticular'),
('Dermatológica'),
('Ocular'),
('Auditiva'),
('Renal'),
('Hepática'),
('Metabólica'),
('Endocrina'),
('Oncológica'),
('Traumática'),
('Conductual'),
('Genética'),
('Otra');

-- ======================
-- TABLA: ENFERMEDAD
-- ======================
CREATE TABLE enfermedad (
    idEnfermedad SERIAL PRIMARY KEY,
    nombEnfermedad VARCHAR(50) NOT NULL,
    idTipoEnfermedad INT REFERENCES tipo_enfermedad(idTipoEnfermedad)
);

-- INSERT
INSERT INTO enfermedad (nombEnfermedad, idTipoEnfermedad) VALUES 
('Parvovirus', 1),           -- Viral
('Moquillo', 1),             -- Viral
('Rabia', 1),                -- Viral
('Leucemia Felina', 1),      -- Viral
('Sarna', 3),                -- Parasitaria
('Garrapatas', 3),           -- Parasitaria
('Pulgas', 3),               -- Parasitaria
('Gusano del Corazón', 3),   -- Parasitaria
('Gastroenteritis', 5),      -- Digestiva
('Dermatitis', 10),          -- Dermatológica
('Conjuntivitis', 11),       -- Ocular
('Otitis', 12),              -- Auditiva
('Fractura', 9),             -- Osteoarticular
('Artritis', 9),             -- Osteoarticular
('Diabetes', 15),            -- Metabólica
('Obesidad', 15),            -- Metabólica
('Ansiedad', 19),            -- Conductual
('Depresión', 19);           -- Conductual

-- Ver enfermedades con sus tipos
SELECT e.nombEnfermedad, t.tipoEnfermedad 
FROM enfermedad e 
JOIN tipo_enfermedad t ON e.idTipoEnfermedad = t.idTipoEnfermedad;

-- Filtrar por tipo
SELECT * FROM enfermedad WHERE idTipoEnfermedad = 1; -- Virales

-- ======================
-- TABLA: DETALLE_ENFERMEDAD
-- ======================
CREATE TABLE detalle_enfermedad (
    idDetalleEnfermedad SERIAL PRIMARY KEY,
    idHistorial INT REFERENCES historial_animal(idHistorial),
    idEnfermedad INT REFERENCES enfermedad(idEnfermedad),
	medicinas varchar(500),
    gravedadEnfermedad VARCHAR(10),
    estadoEnfermedad VARCHAR(30)
);

-- ======================
-- TABLA: CASO_ANIMAL
-- ======================
CREATE TABLE caso_animal (
    idCaso SERIAL PRIMARY KEY,
    tipoCaso VARCHAR(50),
    descripcionCompleta VARCHAR(255),
    direccion VARCHAR(255),
    f_entrada DATE,
    idAnimal INT REFERENCES animal(idAnimal),
    idUsuario INT REFERENCES usuario(idUsuario)
);

-- ======================
-- TABLA: ADOPCION
-- ======================
CREATE TABLE adopcion (
    idAdopcion SERIAL PRIMARY KEY,
    f_Adopcion DATE,
    contrato VARCHAR(255),
    condiciones VARCHAR(255),
    estadoAdopcion VARCHAR(30),
    direccionAdoptante VARCHAR(150),
    idAnimal INT REFERENCES animal(idAnimal),
    idPersona INT REFERENCES persona(idPersona),
    idEntregante INT REFERENCES usuario(idUsuario)
);

-- ======================
-- TABLA: DONACION
-- ======================
CREATE TABLE donacion (
    idDonacion SERIAL PRIMARY KEY,
    f_donacion DATE,
    h_donacion TIME,
    idUsuario INT REFERENCES usuario(idUsuario)
);

-- ======================
-- TABLA: CATEGORIA_DONACION
-- ======================
CREATE TABLE categoria_donacion (
    idCategoria SERIAL PRIMARY KEY,
    nombCategoria VARCHAR(30) NOT NULL
);

-- INSERT
INSERT INTO categoria_donacion (nombCategoria) VALUES 
('Alimentos'),
('Medicinas'),
('Donacion economica'),
('Otros');

-- ======================
-- TABLA: DETALLE_DONACION
-- ======================
CREATE TABLE detalle_donacion (
    idDetalleDonacion SERIAL PRIMARY KEY,
    cantidadDonacion DECIMAL(5,2) CHECK (cantidadDonacion > 0),
    detalleDonacion VARCHAR(150),
    idDonacion INT REFERENCES donacion(idDonacion),
    idCategoria INT REFERENCES categoria_donacion(idCategoria)
);

-- ======================
-- TABLA: DONACION_GENERAL
-- ======================
CREATE TABLE donacion_general (
    idGeneral SERIAL PRIMARY KEY,
    proposito VARCHAR(255),
    notaDonante VARCHAR(255),
    idDonacion INT REFERENCES donacion(idDonacion)
);

-- ======================
-- TABLA: APADRINAMIENTO
-- ======================
CREATE TABLE apadrinamiento (
    idApadrinamiento SERIAL PRIMARY KEY,
    f_inicio DATE,
    frecuencia VARCHAR(20),
    idDonacion INT REFERENCES donacion(idDonacion),
    idAnimal INT REFERENCES animal(idAnimal)
);